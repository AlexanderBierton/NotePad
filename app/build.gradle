/*
 * Copyright (c) 2015 Jonas Kalderstam.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.3.0'
    }
}

apply plugin: 'com.android.application'

repositories {
    jcenter()
}

// Version number
def versionMajor = 6 // Major UI overhauls
def versionMinor = 0 // Some new functionality
def versionPatch = 0 // Bug fixes
def versionBuild = 0 // Bump for dogfood builds, public betas, etc.

// Version name from git
def getVersionName = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'describe', '--tags'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    } catch (Exception e) {
        return "GITFAILEDINGRADLE"
    }
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.0"

    lintOptions {
        abortOnError true
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    defaultConfig {
        applicationId "com.nononsenseapps.notepad"
        // 17 is where start/end replaced left/right in layouts
        // vector drawables were added in 21
        minSdkVersion 21
        targetSdkVersion 23
        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild * 10
        versionName getVersionName()

        // Only keep high-res stuff that is actually used
        resConfigs "nodpi", "hdpi", "xhdpi", "xxhdpi", "xxxhdpi"

        // If Non-Free libraries are to be used
        buildConfigField "boolean", "NONFREE", "false"
        buildConfigField "boolean", "DROPBOX_ENABLED", "false"
    }

    /*productFlavors {
        free {}
        play {
            // If Non-Free libraries are to be used
            buildConfigField "boolean", "NONFREE", "true"
        }
        playBeta {
            // Beta runs at +1
            // disabled during dev process
            //versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild * 10 + 1

            buildConfigField "boolean", "DROPBOX_ENABLED", "true"
            // If Non-Free libraries are to be used
            buildConfigField "boolean", "NONFREE", "true"
        }
    }*/

    /*sourceSets {
        playBeta {
            // Include play sources
            java.srcDirs = ['src/play/java']
            res.srcDirs = ['src/play/res', 'src/playBeta/res']
            manifest.srcFile 'src/play/AndroidManifest.xml'
        }
    }*/

    if (project.hasProperty('STORE_FILE')) {
        signingConfigs {
            release {
                storeFile file(STORE_FILE)
                storePassword STORE_PASSWORD
                keyAlias KEY_ALIAS
                keyPassword KEY_PASSWORD
            }
        }

        buildTypes {
            release {
                signingConfig signingConfigs.release
            }
        }
    } else {
        println "No key store defined. Signed release not available..."
    }

    buildTypes {
        debug {
            // True during dev process
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile 'com.android.support:support-v4:23.0.1'
    compile 'com.android.support:recyclerview-v7:23.0.1'
    compile 'com.android.support:appcompat-v7:23.0.1'
    compile 'com.android.support:design:23.0.1'
    compile 'com.android.support:preference-v7:23.0.1'

    compile 'joda-time:joda-time:2.3'
    // Dashclock
    compile 'com.google.android.apps.dashclock:dashclock-api:2.0.0'
    // FilePicker
    compile 'com.nononsenseapps:filepicker:2.4.0'
    // OrgParser
    compile 'org.cowboyprogrammer:orgparser:1.1'

    // Dropbox and non-free stuff
    /*playCompile fileTree(dir: 'src/play/libs', include: '*.jar')
    playBetaCompile fileTree(dir: 'src/play/libs', include: '*.jar')*/
    // Tests
    androidTestCompile 'com.squareup.spoon:spoon-client:1.1.1'

}
